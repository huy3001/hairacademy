!function (t, i, e, s) {
    function h(i, e, s) {
        this.options = t.extend({}, n, s), this._container = t("#" + i), this._holder = t("#" + e), this._items = this._container.children(), this._matrix = [], this._fields = {}, this._order = [], this._menu = {}, this._query = {}, this._match = [], this._mismatch = [], this._z = 9999, this._bind = function (t, i) {
            return function () {
                return t.apply(i, arguments)
            }
        }, this.init()
    }

    var n = {noresults: "No results match", hide: !0, block: [], close: !1, query: s, callback: s};
    
    h.prototype.init = function () {
        this.load(), this.set(), this.options.query !== s && this.trigger(this.options.query)
    }, h.prototype.load = function () {
        var i, e, h, n, o, l, r;
        this._items.each(this._bind(function (a, c) {
            for (i = c.attributes, l = {}, e = 0; e < i.length; e++)if (h = i[e].name, 0 === h.indexOf("data-") && -1 === t.inArray(h, this.options.block))for (n = h.replace(/data-/gi, "").replace(/-/gi, " "), o = c.getAttribute(h).split(", "), l[n] = o, this._fields[n] === s && (this._order.push(n), this._fields[n] = {}), r = 0; r < o.length; r++)o[r].length && (o[r] = o[r].replace(/\\/g, ""), this._fields[n][o[r]] = this._fields[n][o[r]] === s ? 1 : this._fields[n][o[r]] + 1);
            this._matrix.push(l)
        }, this))
    }, h.prototype.set = function () {
        var i, e = 0, s = t.browser;
        for (this._menu.list = t("<ul class='ft-menu' />"), e; e < this._order.length; e++)i = s.webkit || s.opera ? this._order[e] : this._order[this._order.length - e - 1], this._menu[i] = {}, this.build(i), this.cache(i), this.events(i), this.append(i), this.query(i);
        this._holder.html(this._menu.list)
    }, h.prototype.build = function (i) {
        var e, s, h, n = [];
        e = "<li class='ft-field'><span class='ft-label'>" + i + "</span><div class='ft-panel ft-hidden'><ul class='ft-selected' style='display:none;'></ul><fieldset class='ft-search'><input type='text' placeholder='Search' /></fieldset><ul class='ft-tags'>";
        for (h in this._fields[i])n.push(h);
        if(i === 'màu sắc' ){
            for (n, s = 0; s < n.length; s++){
                h = n[s];
                var res = h.split("-");
                e += "<li class='filter-color' data-count='" + this._fields[i][h] + "' data-color='"+res[1]+"'>" + res[0] + "<div style='display: none'>-" + res[1] + "</div><i style='background: "+res[1]+"'></i></li>";
            }
        }else{
            for (n, s = 0; s < n.length; s++)h = n[s], e += "<li data-count='" + this._fields[i][h] + "' >" + h + "</li>";
        }
        e += "</ul><div class='ft-mismatch ft-hidden'></div></div></li>", this._menu[i].item = t(e)
    }, h.prototype.cache = function (i) {
        this._menu[i].label = this._menu[i].item.find("span.ft-label"), this._menu[i].panel = this._menu[i].item.find("div.ft-panel"), this._menu[i].selected = this._menu[i].item.find("ul.ft-selected"), this._menu[i].search = this._menu[i].item.find("fieldset.ft-search"), this._menu[i].tags = this._menu[i].item.find("ul.ft-tags"), this._menu[i].mismatch = this._menu[i].item.find("div.ft-mismatch"), this._menu[i].highlight = t([]), this._menu[i].active = t([])
    }, h.prototype.append = function (t) {
        this._menu.list.append(this._menu[t].item)
    }, h.prototype.query = function (t) {
        this._query[t] = []
    }, h.prototype.events = function (i) {
        t(e).on("click", this._bind(function () {
            this.closePanel(i)
        }, this)), this._menu[i].panel.on("click", this._bind(function (t) {
            t.stopPropagation()
        }, this)), this._menu[i].panel.on("mouseenter", this._bind(function () {
            this.bringToFront(i)
        }, this)), this._menu[i].label.on("click", this._bind(function (t) {
            this.openPanel(i), this.bringToFront(i), t.stopPropagation()
        }, this)), this._menu[i].search.on("keyup", "input", this._bind(function (t) {
            return 38 === t.which || 40 === t.which ? !1 : void(13 === t.which ? this._menu[i].highlight.length && (this.select(i), this.filter()) : this.search(i, t.target.value))
        }, this)), this._menu[i].search.on("keydown", "input", this._bind(function (t) {
            40 === t.which ? (this.moveHighlight(i, "down"), t.preventDefault()) : 38 === t.which && (this.moveHighlight(i, "up"), t.preventDefault())
        }, this)), this._menu[i].tags.on("mouseenter", "li", this._bind(function (e) {
            this.highlight(i, t(e.target))
        }, this)), this._menu[i].tags.on("mouseleave", "li", this._bind(function () {
            this.clearHighlight(i)
        }, this)), this._menu[i].tags.on("click", "li", this._bind(function () {
            this.select(i), this.filter()
        }, this)), this._menu[i].selected.on("click", "li", this._bind(function (e) {
            this.unselect(i, t(e.target).text()), this.filter()
        }, this))
    }, h.prototype.bringToFront = function (t) {
        this._z = this._z + 1, this._menu[t].panel.css("z-index", this._z), this._menu[t].search.find("input").focus()
    }, h.prototype.openPanel = function (t) {
        this._menu[t].label.toggleClass("ft-opened"), this._menu[t].panel.toggleClass("ft-hidden"), this._menu[t].search.find("input").focus()
    }, h.prototype.closePanel = function (t) {
        this.resetSearch(t), this._menu[t].panel.addClass("ft-hidden"), this._menu[t].label.removeClass("ft-opened")
    }, h.prototype.preventOverflow = function (t) {
        var i, e, s, h, n;
        return s = parseInt(this._menu[t].tags.css("maxHeight"), 10), n = this._menu[t].tags.scrollTop(), h = s + n, e = this._menu[t].highlight.position().top + this._menu[t].tags.scrollTop(), i = e + this._menu[t].highlight.outerHeight(), i >= h ? this._menu[t].tags.scrollTop(i - s > 0 ? i - s : 0) : n > e ? this._menu[t].tags.scrollTop(e) : void 0
    }, h.prototype.moveHighlight = function (t, i) {
        if (this._menu[t].highlight.length) {
            var e = "down" === i ? "nextAll" : "prevAll", s = this._menu[t].highlight[e](":visible:first");
            s.length && (this.clearHighlight(t), this.highlight(t, s), this.preventOverflow(t))
        } else this.highlight(t, this._menu[t].tags.children(":visible:first")), this.preventOverflow(t)
    }, h.prototype.highlight = function (t, i) {
        this._menu[t].highlight = i, this._menu[t].highlight.addClass("ft-highlight")
    }, h.prototype.removeHighlight = function (t) {
        this._menu[t].highlight.removeClass("ft-highlight")
    }, h.prototype.hideHighlight = function (t) {
        this._menu[t].highlight.toggleClass("ft-hidden")
    }, h.prototype.resetHighlight = function (i) {
        this._menu[i].highlight = t([])
    }, h.prototype.clearHighlight = function (t) {
        this.removeHighlight(t), this.resetHighlight(t)
    }, h.prototype.showMismatch = function (t, i) {
        this._menu[t].mismatch.html(this.options.noresults + ' "<b>' + i + '</b>"').removeClass("ft-hidden")
    }, h.prototype.hideMismatch = function (t) {
        this._menu[t].mismatch.toggleClass("ft-hidden")
    }, h.prototype.search = function (t, i) {
        this.clearHighlight(t), this.showResults(t, i), this.highlight(t, this._menu[t].tags.children(":visible:first"))
    }, h.prototype.resetSearch = function (t) {
        this._menu[t].search.find("input").val(""), this._menu[t].tags.children().not(this._menu[t].active).removeClass("ft-hidden"), this.hideMismatch(t)
    }, h.prototype.showResults = function (i, e) {
        var s = 0;
        this.hideMismatch(i), this._menu[i].tags.children().not(this._menu[i].active).each(function () {
            (this.textContent || this.innerText).toUpperCase().indexOf(e.toUpperCase()) >= 0 ? (t(this).removeClass("ft-hidden"), s += 1) : t(this).toggleClass("ft-hidden")
        }), s || this.showMismatch(i, e)
    }, h.prototype.select = function (t) {
        this.updateQueryTags(t, this._menu[t].highlight.text()), this.updateActiveClass(t), this.removeHighlight(t), this.appendToSelected(t), this.addToActive(t), this.hideHighlight(t), this.resetHighlight(t), this.resetSearch(t), this.options.close && this.closePanel(t)
    }, h.prototype.updateQueryTags = function (i, e) {
        var s = t.inArray(e, this._query[i]);
        -1 === s ? this._query[i].push(e) : this._query[i].splice(s, 1)
    }, h.prototype.updateActiveClass = function (t) {
        this._query[t].length ? this._menu[t].label.addClass("ft-active") : this._menu[t].label.removeClass("ft-active")
    }, h.prototype.appendToSelected = function (t) {
        this._menu[t].selected.append(this._menu[t].highlight.clone()), this.slideSelected(t)
    }, h.prototype.addToActive = function (t) {
        this._menu[t].active = this._menu[t].active.add(this._menu[t].highlight)
    }, h.prototype.unselect = function (t, i) {
        this.updateQueryTags(t, i), this.removeFromSelected(t, i), this.removeFromActive(t, i), this.updateActiveClass(t), this.resetSearch(t)
    }, h.prototype.removeFromSelected = function (t, i) {
        this._menu[t].selected.children().filter(function () {
            return (this.textContent || this.innerText) === i
        }).remove(), this.slideSelected(t)
    }, h.prototype.removeFromActive = function (t, i) {
        this._menu[t].active = this._menu[t].active.filter(function () {
            return (this.textContent || this.innerText) !== i
        })
    }, h.prototype.slideSelected = function (t) {
        this._menu[t].selected.children().length ? this._menu[t].selected.slideDown("fast") : this._menu[t].selected.slideUp("fast")
    }, h.prototype.filter = function () {
        var i, e, s, h, n;
        for (this.resetCachedMatch(), e = this._matrix.length - 1; e >= 0; e--) {
            n = !0;
            for (i in this._query) {
                for (h = 0, s = this._query[i].length - 1; s >= 0; s--)-1 !== t.inArray(this._query[i][s], this._matrix[e][i]) && (h += 1);
                !this._query[i].length || h >= 1 || (n = !1)
            }
            this.updateFields(e, n), this.cacheMatch(e, n), this.showMatch(e, n)
        }
        this.rewriteFields(), this.callback()
    }, h.prototype.updateFields = function (t, i) {
        var e, h, n;
        for (e in this._fields)if (t === this._matrix.length - 1 && (this._fields[e] = {}), h = this._matrix[t][e])for (n = 0; n < h.length; n++)h[n].length && (this._fields[e][h[n]] = this._fields[e][h[n]] === s ? 1 : this._fields[e][h[n]] + 1)
    }, h.prototype.rewriteFields = function () {
        var t;
        for (t in this._fields)this._menu[t].tags.children().each(this._bind(function (i, e) {
            var h = e.textContent || e.innerText, n = this._fields[t][h] === s ? 0 : this._fields[t][h];
            e.setAttribute("data-count", n)
        }, this))
    }, h.prototype.resetCachedMatch = function () {
        this._match = [], this._mismatch = []
    }, h.prototype.cacheMatch = function (t, i) {
        i ? this._match.unshift(this._items[t]) : this._mismatch.unshift(this._items[t])
    }, h.prototype.showMatch = function (t, i) {
        if (this.options.hide) {
            var e = -1 !== this._items[t].className.indexOf("ft-hidden");
            i ? e && (this._items[t].className = this._items[t].className.replace(/ft-hidden/g, "")) : e || (this._items[t].className = this._items[t].className + " ft-hidden")
        }
    }, h.prototype.callback = function () {
        this.options.callback !== s && t.isFunction(this.options.callback) && this.options.callback(this._query, this._match, this._mismatch)
    }, h.prototype.trigger = function (t) {
        var i;
        for (i in this._fields)this.clearSearch(i), this.updateQueryField(i, t), this.updateActiveClass(i), this.updatePanel(i), this.toggleSelected(i);
        this.filter()
    }, h.prototype.clearSearch = function (t) {
        this.clearHighlight(t), this.resetSearch(t), this.clearSelected(t)
    }, h.prototype.clearSelected = function (i) {
        this._menu[i].selected.empty(), this._menu[i].active = t([])
    }, h.prototype.updateQueryField = function (t, i) {
        this._query[t] = i[t] !== s ? i[t] : []
    }, h.prototype.updatePanel = function (t) {
        var i, e = 0, s = this._menu[t].tags.children().removeClass("ft-hidden");
        for (e; e < this._query[t].length; e++)i = s.filter(this._bind(function (i) {
            return (s[i].textContent || s[i].innerText) === this._query[t][e]
        }, this)), this._menu[t].selected.append(i.clone()), this._menu[t].active = this._menu[t].active.add(i), i.addClass("ft-hidden")
    }, h.prototype.toggleSelected = function (t) {
        this._menu[t].selected.children().length ? this._menu[t].selected.show() : this._menu[t].selected.hide()
    }, h.prototype.reset = function () {
        this.trigger({})
    }, t.filtrify = function (t, i, e) {
        return new h(t, i, e)
    }
}(jQuery, window, document);